import numpy as np

POINT_HOME = [-123,-349.7,395.9, -179,0.2,-179]  # 初始点
POINT_TRANSIT = [-24.3, -434.17, 395.9, -179, 0, -179] # 中转点
POINT_DOWN = [190, 200.56] # 下点位 吸 放
POINT_UP = 395.9 # 上点位
PIECE_SIZE = 40 # 棋子大小mm
CHESSBOX_DEVX = + 0 # 棋盒x偏差
CHESSBOX_DEVY = + 0  # 棋盒y偏差

# 拍照点
RED_CAMERA = [-24.3, -434.17, 395.9, -179, 0, -179]# 红方拍照点
BLACK_CAMERA = [30.5, -321.65, 395.9, 179, 0, -0.1]# 黑方拍照点
#### 四角点 左上 右上 右下 左下
CHESS_POINTS_R = [(114,140),(1226,151),(1216,627),(111,612)] # 左上 右上 右下 左下
WORLD_POINTS_R = [(180,-548),(-177,-550),(-176,-395),(182,-396)] # 右下 左下 左上 右上
WORLD_POINTS_B = [(-175.70,-195.97),(175.30,-194),(180,-348),(-175,-353)] # 左上 右上 右下 左下
CHESS_POINTS_B = [(116,102),(1200,89),(1216,564),(120,588)] # 左上 右上 右下 左下

# 拍照点
RCV_CAMERA = [-350, -320, 395.9, -179, 0, -179] # 收子区域拍照点
SAC_CAMERA = [333.5, -360.65, 300.9, -179, 0, -179] # 弃子区域拍照点
# 吸棋高度
# POINT_RCV_DOWN  = [194,207.7]
POINT_RCV_DOWN  = [189,205,240] # 收子区域吸棋高度 下层，上层
POINT_SAC_DOWN = [235,250] # 弃子区域吸棋高度 下层，上层
# 透视矫正
SRC_RCV_POINTS = np.float32([
                    [449, 265],  # 左上
                    [835, 114],  # 右上
                    [866, 525],  # 右下
                    [462, 396]  # 左下
                ])
DST_RCV_POINTS = np.float32([
                    [312, 202],  # 左上
                    [490, 130],  # 右上
                    [504, 323],  # 右下
                    [317, 260]  # 左下
                ])

SRC_SAC_POINTS = np.float32([
                    [632, 157],  # 左上
                    [1029, 171],  # 右上
                    [1033, 545],  # 右下
                    [634, 532]  # 左下
                ])
DST_SAC_POINTS = np.float32([
                    [394, 150],  # 左上
                    [582, 160],  # 右上
                    [583, 335],  # 右下
                    [397, 328]  # 左下
                ])
# 收子区域四点世界坐标 右下 左下 左上 右上
WORLD_POINTS_RCV = [(-230, -440), (-350, -440), (-350, -320), (-230, -320)]
# 收子区域四点像素坐标 左上 右上 右下 左下
CHESS_POINTS_RCV_H = [(366, 116), (758, 118), (753, 509), (362, 506)]
CHESS_POINTS_RCV_L = [(383,130), (752, 132), (744, 502), (380, 494)]

# 弃子区域四点世界坐标 左上 右上 右下 左下
FOUR_WORLD_SAC = [(264,-313),(382,-312),(383,-433),(269,-436)]
# 弃子区域四点像素坐标 左上 右上 右下 左下
BOARD_SAC = [(631,152),(1029,168),(1031,547),(631,536)]
# 分层高度
RCV_H_LAY = 0.28
SAC_H_LAY = 0.29

# io设置
IO_SIDE = 6 # 用户
IO_DEN = [4,5] # 绿，红
IO_QI = 6 # 吸气
IO_START = 1 # 启动
IO_STOP = 2 # 停止
IO_RESET = 3 # 复位



POINT_TEST = [-130.066,-554.630, 395.9,-179, 0, -179]